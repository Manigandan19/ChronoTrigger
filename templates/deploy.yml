parameters:
  - name: environment
    type: string
  - name: dependsOn
    type: object
    default: ['deploy_to_test']
  - name: condition
    type: string
    default: 'succeeded()'

stages:
  - stage: deploy_to_${{parameters.environment}}
    displayName: Deploy to ${{parameters.environment}}
    dependsOn:
      - Build
      - ${{ parameters.dependsOn }}
    condition: ${{ parameters.condition }}
    jobs:
      - deployment: Deploy
        variables:
          chrono.tag: $[stageDependencies.Build.Build.outputs['GetPackageVersion.chrono.tag']]
        displayName: Deploy to ${{parameters.environment}}
        pool:
          vmImage: ubuntu-latest
        environment:
          name: ${{parameters.environment}}
      - job: PulumiDeploy
        pool:
          vmImage: ubuntu-latest
        steps:
           # Install dependencies
        - script: npm install
          workingDirectory: $(System.DefaultWorkingDirectory)
          displayName: "Install package dependencies"

           # Select or Create Stack in Pulumi 
        - script:  pulumi stack select ${{parameters.environment}} --create
          displayName: "Select pulumi stack"
          env:
           PULUMI_ACCESS_TOKEN: $(pulumi.access.token)

           # Configure azure location in pulumi
        - script: pulumi config set azure-native:location $(arm.location)
          displayName: "Config pulumi location"
          env:
           PULUMI_ACCESS_TOKEN: $(pulumi.access.token)
        
           # Pulumi up
        - script: npm run pulumi:${{parameters.environment}}
          displayName: "Deploy Pulumi"
          env:
            PULUMI_ACCESS_TOKEN: $(pulumi.access.token)
            ARM_CLIENT_ID: $(arm.client.id)
            ARM_CLIENT_SECRET: $(arm.client.secret)
            ARM_TENANT_ID: $(arm.tenant.id)
            ARM_SUBSCRIPTION_ID: $(arm.subscription.id)
